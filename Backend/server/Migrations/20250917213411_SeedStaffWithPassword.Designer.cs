// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250917213411_SeedStaffWithPassword")]
    partial class SeedStaffWithPassword
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AddOns")
                        .HasColumnType("longtext");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cleaner")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Frequency")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Service")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SpecialInstructions")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AssignedName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("AssignedTo")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("BookingId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("char(36)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Service")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("Staff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("JobsCompleted")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Rating")
                        .HasColumnType("double");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Specialties")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Staff");

                    b.HasData(
                        new
                        {
                            Id = new Guid("90fec09d-cc22-47f4-ba0a-28ac853113b6"),
                            Email = "jane1@example.com",
                            JobsCompleted = 0,
                            Name = "Jane Doe",
                            PasswordHash = "$2a$11$.hDD9TaONP.omDAwm.yDveXyswkazAT0vg/GrYlicBmNNACB7.5rC",
                            Phone = "555-1001",
                            Rating = 4.5,
                            Role = "staff",
                            Specialties = "",
                            Status = "active"
                        },
                        new
                        {
                            Id = new Guid("462adfb4-a302-44eb-b5e4-dea488c1d4d2"),
                            Email = "john1@example.com",
                            JobsCompleted = 0,
                            Name = "John Smith",
                            PasswordHash = "$2a$11$Ru.c/DvGnqIHrXzvIYbuieIjTDVL3RDtHXinY6zBrNqFmGDxRb7r.",
                            Phone = "555-1002",
                            Rating = 4.2000000000000002,
                            Role = "staff",
                            Specialties = "",
                            Status = "busy"
                        },
                        new
                        {
                            Id = new Guid("26673c20-e172-443a-8cc8-4bdcacd00251"),
                            Email = "alice1@example.com",
                            JobsCompleted = 0,
                            Name = "Alice Johnson",
                            PasswordHash = "$2a$11$tgHi2UjbUUerAwNwJGS6Ku5hwBXLqmzj3PICKxza.QfoiSHgrWMci",
                            Phone = "555-1003",
                            Rating = 4.7000000000000002,
                            Role = "staff",
                            Specialties = "",
                            Status = "active"
                        },
                        new
                        {
                            Id = new Guid("7add9704-fdef-4729-adce-1edb64653e20"),
                            Email = "bob1@example.com",
                            JobsCompleted = 0,
                            Name = "Bob Brown",
                            PasswordHash = "$2a$11$eGYhH7AN/wVezE8clFjUeOlEhGJAysEzkWKKiskeesFJjmh4I3T/C",
                            Phone = "555-1004",
                            Rating = 4.0999999999999996,
                            Role = "staff",
                            Specialties = "",
                            Status = "offline"
                        },
                        new
                        {
                            Id = new Guid("746d7cb2-17c8-4f22-b65f-6595193e53b0"),
                            Email = "sara1@example.com",
                            JobsCompleted = 0,
                            Name = "Sara White",
                            PasswordHash = "$2a$11$WEq0WH6gBwhNO7fRkV7cS.4fjheUVstOz/ir3RwnbBzXLI9nazpZu",
                            Phone = "555-1005",
                            Rating = 4.7999999999999998,
                            Role = "staff",
                            Specialties = "",
                            Status = "active"
                        },
                        new
                        {
                            Id = new Guid("b77976d9-9a87-42dc-b9a7-be03d359ed14"),
                            Email = "mike1@example.com",
                            JobsCompleted = 0,
                            Name = "Mike Wilson",
                            PasswordHash = "$2a$11$0fT22JLO4qPuqm8jeEfW0.un655eQIa6Mf9k/V05FBo8CxZAC/Xga",
                            Phone = "555-1006",
                            Rating = 4.2999999999999998,
                            Role = "staff",
                            Specialties = "",
                            Status = "busy"
                        },
                        new
                        {
                            Id = new Guid("a9d604cb-8892-425f-9901-74eccfcb65f1"),
                            Email = "emma1@example.com",
                            JobsCompleted = 0,
                            Name = "Emma Davis",
                            PasswordHash = "$2a$11$ebaI3RSrddE9/LDowrLSU.oFOnaPpU6IzCFds33r8cmPvXB6.mWNy",
                            Phone = "555-1007",
                            Rating = 4.5999999999999996,
                            Role = "staff",
                            Specialties = "",
                            Status = "active"
                        },
                        new
                        {
                            Id = new Guid("a5dfdb2d-5e7a-474e-920d-59f7b1fd5ddd"),
                            Email = "chris1@example.com",
                            JobsCompleted = 0,
                            Name = "Chris Green",
                            PasswordHash = "$2a$11$3Dqlv3A//n7y7ZWykYdP7.eyC5HdB4IUJTFyxgYD7ntQWfLr3RZYu",
                            Phone = "555-1008",
                            Rating = 4.0,
                            Role = "staff",
                            Specialties = "",
                            Status = "offline"
                        },
                        new
                        {
                            Id = new Guid("24d5c3d3-8cf4-421c-8fe2-f922bb943d56"),
                            Email = "olivia1@example.com",
                            JobsCompleted = 0,
                            Name = "Olivia Lee",
                            PasswordHash = "$2a$11$mfAIXO3ezYqkcqi6n8X29O6DruaVVTlLAgDbewx7Q4g6l3f2H3PKq",
                            Phone = "555-1009",
                            Rating = 4.9000000000000004,
                            Role = "staff",
                            Specialties = "",
                            Status = "active"
                        },
                        new
                        {
                            Id = new Guid("d04cd190-da97-449f-baa5-6b42f2aaa555"),
                            Email = "david1@example.com",
                            JobsCompleted = 0,
                            Name = "David King",
                            PasswordHash = "$2a$11$2YckThZXB2BiPfykjOJ/1.R4B7j7wbOdDAkmiTxRLqgY8EtSG43oO",
                            Phone = "555-1010",
                            Rating = 4.2000000000000002,
                            Role = "staff",
                            Specialties = "",
                            Status = "busy"
                        });
                });

            modelBuilder.Entity("Booking", b =>
                {
                    b.HasOne("AppUser", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Job", b =>
                {
                    b.HasOne("Booking", "Booking")
                        .WithMany()
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("AppUser", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
